<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Urllib库的基本使用]]></title>
    <url>%2F2018%2F09%2F13%2FUrllib%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python爬虫之路-01]]></title>
    <url>%2F2018%2F09%2F12%2FPython%E7%88%AC%E8%99%AB%E4%B9%8B%E8%B7%AF-001%2F</url>
    <content type="text"><![CDATA[从第一个爬虫开始1. 什么是爬虫 爬虫的全名叫网络爬虫，简称爬虫。爬虫是什么呢？爬虫有简单的爬虫和复杂的爬虫。实际上简单的爬虫是一种脚本。还有就是高级的爬虫了。高级的爬虫技术是非常难的。其实，类似谷歌Bing百度这种搜索引擎，本质上你也可以认为是一种爬虫。搜索引擎是如何工作的？其实就是通过网络爬虫技术，将互联网中数以百亿计的网页信息保存到本地，形成一个镜像文件，为整个搜索引擎提供数据支撑。 2.学习爬虫该掌握的 基本的Python语法知识；（参考廖雪峰的python教程） Python爬虫常用到的几个重要内置库Urllib, http等，用于下载网页； 正则表达式re、BeautifulSoup（bs4）、Xpath（lxml）等网页解析工具； 爬虫的一些反爬机制，header，robot，时间间隔，代理ip，隐含字段等; 特殊网站的爬取，解决登录、Cookie、动态网页等问题； 爬虫与数据库的结合，将爬取数据进行储存； 应用Python的多线程、多进程进行爬取； 爬虫的框架，Scrapy、PySpider等； 分布式爬虫 3.第一个爬虫Demo 在写第一个爬虫demo之前我们应该了解一些关于网页方面的知识 审查元素 在浏览器的地址栏输入URL地址，在网页处右键单击，找到检查，如下图所示：(不同浏览器的叫法不同，Chrome浏览器叫做检查，Firefox浏览器叫做查看元素，但是功能都是相同的)然后我们就能打开chrome的开发者工具，搞前端的小伙伴可以深入了解一下。我们可以看到，右侧出现了一大推代码即网页源码HTML，正如基因决定了我们的外貌一样，服务器返回的HTML决定了网站的原始容貌。浏览器是作为客户端从服务器端获取信息，将信息解析，并展示给我们的。我们可以利用开发工具在本地修改HTML信息，为网页”整容”但是我们修改的信息不会回传到服务器，服务器存储的HTML信息不会改变。刷新一下界面，页面还会回到原本的样子。这就跟人整容一样，我们能改变一些表面的东西，但是不能改变我们的基因。]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你好，生活]]></title>
    <url>%2F2018%2F09%2F11%2F%E4%BD%A0%E5%A5%BD%EF%BC%8C%E7%94%9F%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[欢迎你来到闰一先生的小站!]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
