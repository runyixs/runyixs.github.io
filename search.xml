<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[企业级监控软件Zabbix安装]]></title>
    <url>%2F2018%2F09%2F13%2F%E4%BC%81%E4%B8%9A%E7%BA%A7%E7%9B%91%E6%8E%A7%E8%BD%AF%E4%BB%B6Zabbix%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[Zabbix 3.4 支持Centos 7，貌似不支持6.9。 Zabbix 是一个企业级的分布式开源监控方案。能够监控各种网络参数以及服务器健康性和完整性。支持灵活的通知机制，提供出色的报告和数据可视化功能。Zabbix支持主动轮询和被动捕获。最关键的是源代码都是免费发行的，可供公众任意使用。这也是它在中小企业广为流行的重要原因之一。本文简要描述Zabbix特性以及基于CentOS 7下安装Zabbix 3.4。 环境准备12345678910111213141516171819202122232425262728# more /etc/redhat-release ##演示环境CentOS Linux release 7.4.1708 (Core) # vi /etc/selinux/config ##关闭selinuxSELINUX=disabled# setenforce 0# yum install mariadb-server mariadb -y ##安装mariadb数据库# systemctl start mariadb# systemctl enable mariadb##添加zabbix yum源，安装zabbix server以及web管理# rpm -ivh http://repo.zabbix.com/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-1.el7.centos.noarch.rpm# yum install zabbix-server-mysql zabbix-web-mysql -y # mysql ##登陆到mysql创建数据库及目录Welcome to the MariaDB monitor. Commands end with ; or \g.Your MariaDB connection id is 3Server version: 5.5.56-MariaDB MariaDB ServerMariaDB [(none)]&gt; create database zabbix character set utf8 collate utf8_bin;Query OK, 1 row affected (0.00 sec)MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost identified by &apos;zabbix#1235&apos;;Query OK, 0 rows affected (0.00 sec)##将zabbix元数据添加到mariadb# zcat /usr/share/doc/zabbix-server-mysql-3.4.4/create.sql.gz | mysql -uzabbix -pzabbix#1235 zabbix Zabbix配置123456789101112131415161718192021222324252627# cp /etc/zabbix/zabbix_server.conf /etc/zabbix/zabbix_server.conf.1121# vim /etc/zabbix/zabbix_server.conf ##使用缺省配置，仅仅设定数据库密码DBPassword=zabbix#1235# vim /etc/httpd/conf.d/zabbix.conf ##修改apache zabbix时区php_value date.timezone Asia/Shanghai# cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bk# vim /etc/httpd/conf/httpd.conf ##Author : LeshamiListen 3080 ##此处使用非缺省的80端口 ##Blog : http://blog.csdn.net/leshami启动相关服务 # systemctl start zabbix-server.service # systemctl enable zabbix-server.service # systemctl start httpd # systemctl enable httpd # netstat -nltp|egrep &quot;zabbix|httpd|mysql&quot; tcp 0 0 0.0.0.0:10051 0.0.0.0:* LISTEN 15720/zabbix_server tcp 0 0 0.0.0.0:3080 0.0.0.0:* LISTEN 15385/httpd tcp 0 0 0.0.0.0:3306 0.0.0.0:* LISTEN 14146/mysqld tcp6 0 0 :::10051 :::* LISTEN 15720/zabbix_server 防火墙配置# firewall-cmd --add-port=3080/tcp --permanent # firewall-cmd --add-port=10051/tcp --permanent # systemctl reload firewalld.service 安装图形界面打开浏览器，输入http://yourip:port/zabbix ，yourip是指安装zabbix-server端服务器的ip地址。 环境监测全部ok即可进入下一步，如果报错即根据提示安装缺失的依赖。 接下来配置到数据库的连接 服务器名称及端口配置 即可完成安装，登陆，缺省用户名Admin，密码zabbix 即可。]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>监控</tag>
        <tag>linux</tag>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Urllib库的基本使用]]></title>
    <url>%2F2018%2F09%2F13%2FUrllib%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python爬虫之路-01]]></title>
    <url>%2F2018%2F09%2F12%2FPython%E7%88%AC%E8%99%AB%E4%B9%8B%E8%B7%AF-001%2F</url>
    <content type="text"><![CDATA[从第一个爬虫开始1. 什么是爬虫 爬虫的全名叫网络爬虫，简称爬虫。爬虫是什么呢？爬虫有简单的爬虫和复杂的爬虫。实际上简单的爬虫是一种脚本。还有就是高级的爬虫了。高级的爬虫技术是非常难的。其实，类似谷歌Bing百度这种搜索引擎，本质上你也可以认为是一种爬虫。搜索引擎是如何工作的？其实就是通过网络爬虫技术，将互联网中数以百亿计的网页信息保存到本地，形成一个镜像文件，为整个搜索引擎提供数据支撑。 2.学习爬虫该掌握的 基本的Python语法知识；（参考廖雪峰的python教程） Python爬虫常用到的几个重要内置库Urllib, http等，用于下载网页； 正则表达式re、BeautifulSoup（bs4）、Xpath（lxml）等网页解析工具； 爬虫的一些反爬机制，header，robot，时间间隔，代理ip，隐含字段等; 特殊网站的爬取，解决登录、Cookie、动态网页等问题； 爬虫与数据库的结合，将爬取数据进行储存； 应用Python的多线程、多进程进行爬取； 爬虫的框架，Scrapy、PySpider等； 分布式爬虫 3.第一个爬虫Demo 在写第一个爬虫demo之前我们应该了解一些关于网页方面的知识 审查元素 在浏览器的地址栏输入URL地址，在网页处右键单击，找到检查，如下图所示：(不同浏览器的叫法不同，Chrome浏览器叫做检查，Firefox浏览器叫做查看元素，但是功能都是相同的)然后我们就能打开chrome的开发者工具，搞前端的小伙伴可以深入了解一下。我们可以看到，右侧出现了一大推代码即网页源码HTML，正如基因决定了我们的外貌一样，服务器返回的HTML决定了网站的原始容貌。浏览器是作为客户端从服务器端获取信息，将信息解析，并展示给我们的。我们可以利用开发工具在本地修改HTML信息，为网页”整容”但是我们修改的信息不会回传到服务器，服务器存储的HTML信息不会改变。刷新一下界面，页面还会回到原本的样子。这就跟人整容一样，我们能改变一些表面的东西，但是不能改变我们的基因。]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你好，生活]]></title>
    <url>%2F2018%2F09%2F11%2F%E4%BD%A0%E5%A5%BD%EF%BC%8C%E7%94%9F%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[欢迎你来到闰一先生的小站!]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
